module Model where

import DA.Set (Set)
import qualified DA.Set as Set

template JobOfferPublicState
  with
    jobId: Int
    hrManager: Party
    public: Party
    jobApplicationCids: Set (ContractId JobApplication)
  where
    signatory hrManager
    observer public

    ensure hrManager /= public
    
    key (hrManager, jobId): (Party, Int)
    maintainer key._1

    choice RegisterJobApplication: ContractId JobOfferPublicState
      with
        jobApplicationCid: ContractId JobApplication
      controller hrManager
      do
        create this with
          jobApplicationCids = Set.insert jobApplicationCid jobApplicationCids

    choice RemoveJobApplication: ContractId JobOfferPublicState
      with
        jobApplicationCid: ContractId JobApplication
      controller hrManager
      do
        create this with
          jobApplicationCids = Set.delete jobApplicationCid jobApplicationCids

template JobOffer
  with
    jobId: Int
    hrManager: Party
    public: Party
  where
    signatory hrManager
    observer public

    ensure hrManager /= public

    key (hrManager, jobId): (Party, Int)
    maintainer key._1
  
    nonconsuming choice NewJobApplication: ContractId JobApplication
      with
        candidate: Party
        summary: Text
      controller candidate
      do
        assertMsg "hr manager cannot apply to a job offer" (hrManager /= candidate)
        jobApplicationCid <- create $ JobApplication with jobId; candidate; hrManager; summary
        exerciseByKey @JobOfferPublicState (hrManager, jobId) RegisterJobApplication with jobApplicationCid
        pure jobApplicationCid

template JobApplication
  with
    jobId: Int
    candidate: Party
    hrManager: Party
    summary: Text
  where
    signatory candidate, hrManager

    ensure candidate /= hrManager

    key (candidate, hrManager, jobId): (Party, Party, Int)
    maintainer key._1

    nonconsuming choice Accept: (ContractId JobContract)
      controller hrManager
      do
        archive self
        create $ JobContract with employee=candidate; hrManager
    
    nonconsuming choice Reject: ()
      controller hrManager
      do
        exerciseByKey @JobOfferPublicState (hrManager, jobId) RemoveJobApplication with jobApplicationCid=self
        archive self

    nonconsuming choice Decline: ()
      controller candidate
      do
        archive self

template JobContract
  with
    hrManager: Party
    employee: Party
  where
    signatory hrManager, employee

    ensure hrManager /= employee

    key (hrManager, employee): (Party, Party)
    maintainer [key._1, key._2]
